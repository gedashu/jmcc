/**
  Пример 2D генерации
*/

// Первый угол
inline var corner_1 = location(-25, 3, -25);
// Второй угол
inline var corner_2 = location(25, 3, 25);

// Владелец мира
inline var owner = "rqbik";

// Параметры генератора, которые использует шум Перлина
inline var octaves = 6;
inline var amplitude = 0.65;
inline var frequency = 2.75;

// Процесс генерации
process generate() {
  var y = corner_1.get_coordinate("Y");

  // Координаты первого угла
  var x1 = corner_1.get_coordinate("X");
  var z1 = corner_1.get_coordinate("Z");

  // Координаты второго угла
  var x2 = corner_2.get_coordinate("X");
  var z2 = corner_2.get_coordinate("Z");

  // Минимальные значения координат
  var min_x = [x1, x2].min();
  var min_z = [z1, z2].min();

  // Максимальные значения координат
  var max_x = [x1, x2].max();
  var max_z = [z1, z2].max();

  // Ободок сгенерированной доски
  var corner_min = variable::set_all_coordinates(min_x, y, min_z);
  var corner_max = variable::set_all_coordinates(max_x, y, max_z);
  world::set_region(
    "dark_oak_planks",
    corner_min.shift_all_coordinates(-1, 0, -1),
    corner_max,
  );

  // Очищаем блоки над доской
  world::set_region(
    "air",
    corner_min.shift_coordinate(1, "Y"),
    corner_max.shift_coordinate(1, "Y"),
  );

  // Размеры региона по X и Z координатам
  var distance_x = (max_x - min_x)
  var distance_z = (max_x - min_x)

  // Сколько итераций нужно для генерации
  var iterations_needed = distance_x * distance_z;
  // Количество итераций генератора
  var iterations = 0;
  // Сид генерации
  var seed = variable::random_in_range(0, 9999999);
  // Тики генерации
  var ticks = 0;

  // Итератор
  function iterator() {
    var x = iterations % distance_x;
    var z = iterations / distance_x;
    // Смещаем угол на просчитанные координаты
    var location = corner_min.shift_all_coordinates(x, 0, z);
    // Шум Перлина
    var noise = location.perlin_noise_3d(
      seed,
      octaves,
      amplitude,
      frequency,
      normalized = true
    );

    // Случайные блоки
    var block = "grass_block"
    if (noise.greater(0)) { block = "spruce_slab[waterlogged=true]" }

    // Установка блока
    world::set_block(block, location);

    // Добавляем итерацию и после этого проверяем, нужно ли
    // дальше генерировать
    if ((++iterations).less(iterations_needed)) {
      // Каждый 10 тик делаем задержку, чтобы не было ошибки рекурсии
      if (ticks.greater(10)) {
        code::wait(1);
        ticks = 0;
      } else {
        ticks++;
      }

      iterator();
    }
  }

  iterator();
  player::message<all_players>("&aГенерация завершена!")
}

// Событие сообщения
event<player_chat> {
  // Если сообщение равно "@generate"
  if (player::chat_message_equals("@generate")) {
    // Если автор сообщения равен владельцу мира
    if (player::name_equals(owner)) {
      player::message<all_players>("&9Генерация...");
      generate();
    }
  }
}
